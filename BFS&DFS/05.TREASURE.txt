#include <iostream>
#include <cstdio>
#include <vector>
#include <string>
#include <queue>
using namespace std;
int dx[]={0,0,-1,1};
int dy[]={-1,1,0,0};
int d[50][50];
int n, m;

int bfs(vector<string> &a, int x, int y){
  int step = 0;
  queue<pair<int, int>> q;
  q.push(make_pair(x, y));
  d[x][y] = 0;
  while(!q.empty()){
    int x = q.front().first;
    int y = q.front().second;
    q.pop();
    for(int k=0; k<4; k++){
      int nx = x+dx[k];
      int ny = y+dy[k];
      if(nx>=0 && nx<n && ny>=0 && ny<m){
        if(a[nx][ny]=='L'){
          if(d[nx][ny]==-1){
            d[nx][ny] = d[x][y]+1;
            if(step < d[nx][ny]) step = d[nx][ny];
            q.push(make_pair(nx, ny));
          }
        }
      }
    }
  }
  return step;
}

void clear(){
  for(int i=0; i<n; i++)
    for(int j=0; j<m; j++){
      d[i][j] = -1;
    }
}

int main() {

  //Please Enter Your Code Here
  cin >> n >> m;
  vector<string> a(n);
  for(int i=0; i<n; i++)
      cin >> a[i];
      
  int ans = 0;
  clear();
  for(int i=0; i<n; i++){
    for(int j=0; j<m; j++){
      if(a[i][j] == 'L'){
        int step = bfs(a, i, j);
        clear();
        if(ans < step) ans = step;
      }
    }
  }
  cout << ans << '\n';

  return 0;
}
