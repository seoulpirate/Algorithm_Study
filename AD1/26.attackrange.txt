#include <iostream>
#include <queue>
using namespace std;
int a[100][100];
bool c[100][100];
int dx[] = {0,0,1,-1};
int dy[] = {1,-1,0,0};
int n;
void bfs(int sx, int sy, int max){
  queue<pair<int, int>> q;
  q.push(make_pair(sx, sy));
  c[sx][sy] = true;
  while(!q.empty()){
    int x = q.front().first;
    int y = q.front().second;
    q.pop();
    for(int k=0; k<4; k++){
      int nx = x+dx[k];
      int ny = y+dy[k];
      if(nx<0 || nx>=n || ny<0 || ny>=n) continue;
      if(c[nx][ny]) continue;
      if(a[x][y]+1>max) continue;
      c[nx][ny] = true;
      a[nx][ny] = a[x][y]+1;
      q.push(make_pair(nx, ny));
    }
  }
}

int main() {

  //Please Enter Your Code Here
  cin >> n;
  int x, y, r;
  cin >> x >> y >> r;
  x-=1; y-=1;
  bfs(x, y, r);

  for(int i=0; i<n; i++){
    for(int j=0; j<n; j++){
      if(i == x && j == y)
        cout << 'x' << ' ';
      else
        cout << a[i][j] << ' ';
    }
    cout << '\n';
  }
  return 0;
}
