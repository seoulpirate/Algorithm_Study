#include <iostream>
using namespace std;

int a[100001];
int d[100001];

int go(int n, int m){
  if(n%m == 0) return m;
  go(m, n%m);
}

int main() {

  //Please Enter Your Code Here
  int n; cin >> n;
  for(int i=0; i<n; i++)
    cin >> a[i];
  for(int i=0; i<n-1; i++){
    int t = a[i]-a[i+1];
    if(t<0) t=-t;
    d[i] = t;
  }
   /*for(int i=0; i<n-1; i++){
     cout << d[i] << ' ';
   }
   cout << '\n';*/
  // 시간복잡도 고려!
  /*for(int i=0; i<n-2; i++){
    for(int j=i+1; j<n-1; j++){
      int gcd = go(d[i], d[j]);
      if(diff==-1 || diff > gcd || gcd == 1){
        diff = gcd;
        break;
      }
    }
  }*/
  int diff = d[0];
  for(int i=1; i<n-1; i++){
      diff = go(diff, d[i]);
  }
  int ans = 0;
  int cur = a[0];
  int i = 1;

  while(true){
    if(cur+diff < a[i]){
        ans+=1;
        cur += diff;
    }else if(cur+diff >= a[i]){
      cur = a[i++];
      if(i>=n)
        break;
    }
  }
  cout << ans << '\n';
  return 0;
}

/*
1, 3, 7, 15
diff: 2, 4, 8
1 3 5 7 9 11 13 15
>>2

diff: 2, 6, 12, 18
2 4 6 8 10 12 14 16 
>>2

ex. 2 5 8 15 
3 3 6
>> 3?

ex. 2 6 12 16
4 6 4
>> 2
2 4 6 8 10 12 14 16

ex. 3 5 10 16
diff : 2 5 6
>> 3?
4 6 7 8 9 11 12 13 14 15

diff를 따로 저장해두고 이들사이의 최대공약수 찾는다.
*/
