#include <iostream>
using namespace std;
const int MAX = 300000;

void merging(int a[], int s1, int e1, int s2, int e2){
  int p = s1, q = s2, index=0;
  int temp[MAX];
  while(p<=e1 && q<=e2){
    if(a[p] <= a[q])
      temp[index++] = a[p++];
    else 
      temp[index++] = a[q++];
  }
  if(p>e1){
    for(int i=q; i<=e2; i++)
      temp[index++] = a[i];
  }else{
    for(int i=p; i<=e1; i++)
      temp[index++] = a[i];
  }
  
  // a[] <- temp[]
  for(int i=s1; i<=e2; i++)
    a[i] = temp[i-s1];
}

void mergeSort(int a[], int start, int end){
  if(start >= end) return ;
  int mid = (start+end)/2;
  mergeSort(a, start, mid);
  mergeSort(a, mid+1, end);
  merging(a, start, mid, mid+1, end);
}

int binarySearch(int a[], int start, int end, int value){
  if(start > end) return -1;
  else if(start == end){
    if(a[start] == value) return start;
    else return -1;
  }else{
    int mid = (start + end) / 2;
    if(a[mid] == value) return mid;
    else if(a[mid] > value) return binarySearch(a, start, mid-1, value);
    else return binarySearch(a, mid+1, end, value);
  }
}

int main() {

  //Please Enter Your Code Here
  int n; cin>>n;
  int a[MAX];
  for(int i=0; i<n; i++)
    cin >> a[i];

  mergeSort(a, 0, n-1);
  
  // 입력으로 주어진 배열 정렬. 그리고 이진탐색 시작.
  int m; cin >> m;
  while(m--){
    int k; cin >> k;
    int index = binarySearch(a, 0, n-1, k);
    cout << (index!=-1 ? '1' : '0') << '\n';
  }
  
  return 0;
}
